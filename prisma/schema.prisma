// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Hotel {
  id           Int           @id @default(autoincrement())
  name         String
  address      String
  location     String
  rooms        Room[]
  reservations Reservation[]
}

model Room {
  id           Int           @id @default(autoincrement())
  roomTypeId   Int
  floor        Int
  number       String
  hotelId      Int
  isAvailable  Boolean       @default(true)
  hotel        Hotel         @relation(fields: [hotelId], references: [id])
  roomType     RoomType      @relation(fields: [roomTypeId], references: [id])
  reservations Reservation[]
}

model RoomType {
  id          Int           @id @default(autoincrement())
  name        String
  rooms       Room[]
  capacity    Int
  price       Int
  Reservation Reservation[]
}

model Reservation {
  id         Int      @id @default(autoincrement())
  hotelId    Int
  roomTypeId Int
  startDate  DateTime
  endDate    DateTime
  status     String
  userId     String? // Changed from Int? to String? to match User model's id field
  hotel      Hotel    @relation(fields: [hotelId], references: [id])
  roomType   RoomType @relation(fields: [roomTypeId], references: [id])
  user       User?    @relation(fields: [userId], references: [id])
  Room       Room?    @relation(fields: [roomId], references: [id])
  roomId     Int?
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  reservations  Reservation[]
}
